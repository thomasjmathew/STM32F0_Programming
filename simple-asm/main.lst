ARM GAS  main.s 			page 1


   1              	;@@ led-stm32.asm
   2              	@@@ written by Frank Sergeant
   3              	@@@    frank@pygmy.utoh.org
   4              	@@@    http://pygmy.utoh.org/riscy
   5              	@@@ This program is in the public domain.  See http://pygmy.utoh.org/riscy/cortex/ 
   6              	@@@ for notes about the program and how to assemble, link, and burn to flash.
   7              	
   8              	@@@ Ported to STM32F0 by Thomas J. Mathew, June 2014
   9              	@@@ Designed to work with the UCT development board.
  10              	
  11              	
  12              	@@@ Directives
  13              	        .thumb                  @ (same as saying '.code 16')
  14              	        .syntax unified
  15              	
  16              	@@@ Equates
  17              			.equ GPIOB_MODER,   0x48000400
  18              	        .equ GPIOB_ODR,   0x48000414
  19              	        .equ RCC_AHBENR,  0x40021014
  20              	        .equ GPIOB_CLKEN, 0x00040000
  21              	        .equ STACKINIT,   0x20000100
  22              	        
  23              	        .equ LEDDELAY,    1000000
  24              	        
  25              	.section .text
  26              	        .org 0
  27              	
  28              	@@@ Vectors
  29              	vectors:        
  30 0000 00010020 	        .word STACKINIT         @ stack pointer value when stack is empty
  31 0004 1D000000 	        .word _start + 1        @ reset vector (manually adjust to odd for thumb)
  32 0008 47000000 	        .word _nmi_handler + 1  @ 
  33 000c 47000000 	        .word _hard_fault  + 1  @ 
  34 0010 47000000 	        .word _memory_fault + 1 @ 
  35 0014 47000000 	        .word _bus_fault + 1    @ 
  36 0018 47000000 	        .word _usage_fault + 1  @ 
  37              	
  38              	_start:
  39              	
  40              	        @@ Enable the Port B peripheral clock by setting bit 17
  41 001c 0B4E     	        ldr r6, = RCC_AHBENR
  42 001e 0C48     	        ldr r0, = #0x00040000 @0b 0000 0000 0000 0100 0000 0000 0000 0000
  43 0020 3060     	        str r0, [r6]
  44              	        
  45              	        @@ Set the mode bits for Port B so that pB0-PB7 are configured as push-pull outputs. 
  46              	        @@ GPIOB_MODER{0-7} = [0 1]
  47              	        @@ No need to set GPIOB_OTYPER as its reset state is all 0s (push-pull enabled)
  48              	        @@  = > MODER = 0b0000 0000 0000 0000 0101 0101 0101 0101
  49              	
  50 0022 0C4E     	        ldr r6, = GPIOB_MODER
  51 0024 0C48     	        ldr r0, = 0x00005555
  52 0026 3060     	        str r0, [r6]
  53              	
  54              	        @@ Load R2 and R3 with the "on" and "off" constants
  55 0028 AA22     	        movs r2, #0xAA              @ value to turn on LED
  56 002a 5523     	        movs r3, #0x55              @ value to turn off LED
  57              	
ARM GAS  main.s 			page 2


  58 002c 0B4E     	        ldr r6, = GPIOB_ODR    @  point to Port C output data register
  59              	        
  60              	loop:
  61 002e 3260     	        str r2, [r6]           @ turn on LEDs
  62 0030 0B49     	        ldr r1, = LEDDELAY
  63 0032 00F005F8 			bl delay
  64 0036 3360     	        str r3, [r6]           @ turn off LEDs
  65 0038 0949     			ldr r1, = LEDDELAY
  66 003a 00F001F8 			bl delay
  67 003e F6E7     			b loop
  68              	delay:
  69 0040 0139     	        subs r1, 1
  70 0042 FDD1     	        bne delay
  71 0044 7047     			bx lr
  72              	
  73              	_dummy:                        @ if any int gets triggered, just hang in a loop
  74              	_nmi_handler:
  75              	_hard_fault:
  76              	_memory_fault:
  77              	_bus_fault:
  78              	_usage_fault:
  79 0046 0130     	        adds r0, #1
  80 0048 0131     	        adds r1, #1
  81 004a FCE71410 	        b _dummy 
  81      02400000 
  81      04000004 
  81      00485555 
  81      00001404 
ARM GAS  main.s 			page 3


DEFINED SYMBOLS
              main.s:17     *ABS*:48000400 GPIOB_MODER
              main.s:18     *ABS*:48000414 GPIOB_ODR
              main.s:19     *ABS*:40021014 RCC_AHBENR
              main.s:20     *ABS*:00040000 GPIOB_CLKEN
              main.s:21     *ABS*:20000100 STACKINIT
              main.s:23     *ABS*:000f4240 LEDDELAY
              main.s:29     .text:00000000 vectors
              main.s:38     .text:0000001c _start
              main.s:74     .text:00000046 _nmi_handler
              main.s:75     .text:00000046 _hard_fault
              main.s:76     .text:00000046 _memory_fault
              main.s:77     .text:00000046 _bus_fault
              main.s:78     .text:00000046 _usage_fault
                            .text:00000000 $d
              main.s:41     .text:0000001c $t
              main.s:60     .text:0000002e loop
              main.s:68     .text:00000040 delay
              main.s:73     .text:00000046 _dummy
              main.s:81     .text:0000004c $d

NO UNDEFINED SYMBOLS
