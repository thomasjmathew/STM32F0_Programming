ARM GAS  main.s 			page 1


   1              	;@@ led-stm32.asm
   2              	@@@ written by Frank Sergeant
   3              	@@@    frank@pygmy.utoh.org
   4              	@@@    http://pygmy.utoh.org/riscy
   5              	@@@ This program is in the public domain.  See http://pygmy.utoh.org/riscy/cortex/ 
   6              	@@@ for notes about the program and how to assemble, link, and burn to flash.
   7              	
   8              	@@@ Ported to STM32F0 by Thomas J. Mathew, June 2014
   9              	@@@ Designed to work with the UCT development board.
  10              	
  11              	
  12              	@@@ Directives
  13              	        .thumb                  @ (same as saying '.code 16')
  14              	        .syntax unified
  15              	
  16              	@@@ Equates
  17              			.equ GPIOB_MODER,   0x48000400
  18              	        .equ GPIOB_ODR,   0x48000414
  19              	        .equ RCC_AHBENR, 0x40021014
  20              	        .equ STACKINIT,   0x20000100
  21              	        
  22              	        .equ LEDDELAY,    100000
  23              	        
  24              	.section .text
  25              	        .org 0
  26              	
  27              	@@@ Vectors
  28              	vectors:        
  29 ???? 00010020 	        .word STACKINIT         @ stack pointer value when stack is empty
  30 ???? 00000000 	        .word _start + 1        @ reset vector (manually adjust to odd for thumb)
  31 ???? 00000000 	        .word _nmi_handler + 1  @ 
  32 ???? 00000000 	        .word _hard_fault  + 1  @ 
  33 ???? 00000000 	        .word _memory_fault + 1 @ 
  34 ???? 00000000 	        .word _bus_fault + 1    @ 
  35 ???? 00000000 	        .word _usage_fault + 1  @ 
  36              	
  37              	_start:
  38              	
  39              	        @@ Enable the Port B peripheral clock by setting bit 17
  40 ???? 004E     	        ldr r6, = RCC_AHBENR
  41              	        mov r0, 0x00040000 @0b 0000 0000 0000 0100 0000 0000 0000 0000
  42 ???? 3060     	        str r0, [r6]
  43              	        
  44              	        @@ Set the mode bits for Port B so that pB0-PB7 are configured as push-pull outputs. 
  45              	        @@ GPIOB_MODER{0-7} = [0 1]
  46              	        @@ No need to set GPIOB_OTYPER as its reset state is all 0s (push-pull enabled)
  47              	        @@  = > MODER = 0b0000 0000 0000 0000 0101 0101 0101 0101
  48              	
  49 ???? 004E     	        ldr r6, = GPIOB_MODER
  50 ???? 0048     	        ldr r0, = 0x00005555
  51 ???? 3060     	        str r0, [r6]
  52              	
  53              	        @@ Load R2 and R3 with the "on" and "off" constants
  54              	        mov r2, 0x000000AA              @ value to turn on LED
  55              	        mov r3, 0x00000055              @ value to turn off LED
  56              	
  57 ???? 004E     	        ldr r6, = GPIOB_ODR    @  point to Port C output data register
ARM GAS  main.s 			page 2


  58              	        
  59              	loop:
  60 ???? 3260     	        str r2, [r6]           @ turn on LEDs
  61 ???? 0049     	        ldr r1, = LEDDELAY
  62 ???? 00F000F8 			bl delay
  63 ???? 3360     	        str r3, [r6]           @ turn off LEDs
  64 ???? 0049     			ldr r1, = LEDDELAY
  65 ???? 00F000F8 			bl delay
  66 ???? 00E0     			b loop
  67              	delay:
  68 ???? 1180     	        subs r1, 1
  69 ???? 00D1     	        bne delay
  70 ???? 7047     			bx lr
  71              	
  72              	_dummy:                        @ if any int gets triggered, just hang in a loop
  73              	_nmi_handler:
  74              	_hard_fault:
  75              	_memory_fault:
  76              	_bus_fault:
  77              	_usage_fault:
  78              	        add r0, 1
  79              	        add r1, 1
  80 ???? 00E01410 	        b _dummy 
  80      02400004 
  80      00485555 
  80      00001404 
  80      0048A086 
ARM GAS  main.s 			page 3


DEFINED SYMBOLS
              main.s:0      .text:00000000 L0F0
              main.s:17     *ABS*:48000400 GPIOB_MODER
              main.s:18     *ABS*:48000414 GPIOB_ODR
              main.s:19     *ABS*:40021014 RCC_AHBENR
              main.s:20     *ABS*:20000100 STACKINIT
              main.s:22     *ABS*:000186a0 LEDDELAY
              main.s:28     .text:00000000 vectors
              main.s:37     .text:00000000 _start
              main.s:73     .text:00000000 _nmi_handler
              main.s:74     .text:00000000 _hard_fault
              main.s:75     .text:00000000 _memory_fault
              main.s:76     .text:00000000 _bus_fault
              main.s:77     .text:00000000 _usage_fault
              main.s:40     .text:00000000 L0L0
                            .text:00000000 $d
              main.s:40     .text:00000000 $t
              main.s:41     .text:00000000 L0L1
              main.s:42     .text:00000000 L0L2
              main.s:49     .text:00000000 L0L3
              main.s:50     .text:00000000 L0L4
              main.s:51     .text:00000000 L0L5
              main.s:54     .text:00000000 L0L6
              main.s:55     .text:00000000 L0L7
              main.s:57     .text:00000000 L0L8
              main.s:59     .text:00000000 loop
              main.s:60     .text:00000000 L0L9
              main.s:61     .text:00000000 L0L10
              main.s:62     .text:00000000 L0L11
              main.s:67     .text:00000000 delay
              main.s:63     .text:00000000 L0L12
              main.s:64     .text:00000000 L0L13
              main.s:65     .text:00000000 L0L14
              main.s:66     .text:00000000 L0L15
              main.s:68     .text:00000000 L0L16
              main.s:69     .text:00000000 L0L17
              main.s:70     .text:00000000 L0L18
              main.s:72     .text:00000000 _dummy
              main.s:78     .text:00000000 L0L19
              main.s:79     .text:00000000 L0L20
              main.s:80     .text:00000000 L0L21
              main.s:80     .text:00000002 $d
              main.s:80     .text:00000000 $$lit_1
              main.s:80     .text:00000014 $t
                            .data:00000000 $d
                             .bss:00000000 $d
                            .stab:00000120 $d
                         .stabstr:0000000f $d
                  .ARM.attributes:00000021 $d

NO UNDEFINED SYMBOLS
